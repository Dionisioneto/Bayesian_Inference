if(!require(pacman)) install.packages("pacman"); library(pacman)
p_load(bayesrules, rstanarm, bayesplot,
tidyverse, tidybayes, broom.mixed)
hist(rnorm(1000,mean=-1.4,sd = 0.7), breaks = 12)
hist(rnorm(1000,mean=0.07,sd = 0.035),breaks = 12)
data("weather_perth")
weather = weather_perth %>%
select(day_of_year, raintomorrow, humidity9am,
humidity3pm, raintoday)
head(weather)
modelo.priori <- stan_glm(raintomorrow~humidity9am,
data = weather, family = binomial,
prior_intercept = normal(-1.4, 0.7),
prior = normal(0.07,0.035),
chains = 4, iter=500*2,
seed=10, prior_PD = TRUE)
summary(modelo.priori)
set.seed(10)
weather %>%
add_fitted_draws(modelo.priori, n=100) %>%
ggplot(aes(x = humidity9am, y = raintomorrow)) +
geom_line(aes(y = .value, group = .draw), linewidth = 0.1)
weather %>% add_predicted_draws(modelo.priori, n = 100) %>%
group_by(.draw) %>%
summarise(proportion_rain = mean(.prediction == 1)) %>%
ggplot(aes(x = proportion_rain)) +
geom_histogram(color = "white")
ggplot(weather, aes(x = humidity9am, y = raintomorrow)) +
geom_jitter(size = 0.5) + coord_flip()
weather %>%
mutate(humity_bracket =
cut(humidity9am, breaks = seq(10,100, by = 10))) %>%
group_by(humity_bracket) %>%
summarise(rain_rate = mean(raintomorrow == "Yes")) %>%
ggplot(aes(x = humity_bracket, y = rain_rate)) +
geom_point(size = 4) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(weather, aes(x = humidity9am, y = raintomorrow)) +
geom_jitter(size = 0.5) + coord_flip()
weather %>%
mutate(humity_bracket =
cut(humidity9am, breaks = seq(10,100, by = 10))) %>%
group_by(humity_bracket) %>%
summarise(rain_rate = mean(raintomorrow == "Yes")) %>%
ggplot(aes(x = humity_bracket, y = rain_rate)) +
geom_point(size = 4) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(weather, aes(x = humidity9am, y = raintomorrow)) +
geom_jitter(size = 0.5) + coord_flip()
weather %>%
mutate(humity_bracket =
cut(humidity9am, breaks = seq(10,100, by = 10))) %>%
group_by(humity_bracket) %>%
summarise(rain_rate = mean(raintomorrow == "Yes")) %>%
ggplot(aes(x = humity_bracket, y = rain_rate)) +
geom_point(size = 4) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
weather %>%
mutate(humity_bracket =
cut(humidity9am, breaks = seq(10,100, by = 10))) %>%
group_by(humity_bracket) %>%
summarise(rain_rate = mean(raintomorrow == "Yes")) %>%
ggplot(aes(x = humity_bracket, y = rain_rate)) +
geom_point(size = 4) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
chuva.modelo1 = update(modelo.priori, prior_PD = FALSE)
mcmc_trace(chuva.modelo1)
mcmc_dens_overlay(chuva.modelo1)
mcmc_acf(chuva.modelo1)
weather %>% add_fitted_draws(chuva.modelo1, n = 100) %>%
ggplot(aes(x = humidity9am, y = raintomorrow)) +
geom_line(aes(y = .value, group = .draw), alpha = 0.15) +
labs(y = "Probabilidade de Chover")
summary(chuva.modelo1)
summary(chuva.modelo1, prob = 0.8)
posterior_interval(chuva.modelo1, prob=0.9)
exp(posterior_interval(chuva.modelo1, prob=0.9))
exp(posterior_interval(chuva.modelo1, prob=0.9))[2,]
exp(posterior_interval(chuva.modelo1, prob=0.9)*15)[2,]
set.seed(10)
set.seed(10)
predicao.binaria = posterior_predict(
chuva.modelo1, newdata = data.frame(humity9am = 99)
)
predicao.binaria = posterior_predict(
chuva.modelo1, newdata = data.frame(humidity9am = 99)
)
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = '(Intercept)' + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+ods),
Y = rbinom(20000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+ods),
Y = rbinom(20000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(20000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 20000, size = 1, prob = prob))
prob
rain_model_1_df <- as.data.frame(rchuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds / (1 + odds),
Y = rbinom(20000, size = 1, prob = prob))
rain_model_1_df <- as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds / (1 + odds),
Y = rbinom(20000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 20000, size = 20000, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 1, size = 20000, prob = prob))
modelo.chuva1
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 1, size = 1, prob = prob))
modelo.chuva1
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 2000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 20000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 2000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 5000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 2000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 3000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 1000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 2000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 20000, size = 1, prob = prob))
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds))
modelo.chuva1
chuva.modelo1
modelo.chuva1 = as.data.frame(chuva.modelo1) %>%
mutate(log_odds = `(Intercept)` + humidity9am*99,
odds = exp(log_odds),
prob = odds/(1+odds),
Y = rbinom(n = 2000, size = 1, prob = prob))
head(modelo.chuva1,2)
## histograma
mcmc_hist(predicao.binaria) + labs(x = "Y")
ggplot(modelo.chuva1, aes(x = Y)) +
stat_count()
table(predicao.binaria)
table(predicao.binaria); prop.table(table(predicao.binaria))
proporcao.chuva = function(p){mean(p == 1)}
pp_check(modelo.chuva1, nreps = 200,
plotfun= "stat", stat = "proporcao.chuva") +
xlab("Probabilidade de chover")
proporcao.chuva = function(p){mean(p == 1)}
pp_check(modelo.chuva1, nreps = 200,
plotfun= "stat", stat = "proporcao.chuva") +
xlab("Probabilidade de chover")
pp_check(chuva.modelo1, nreps = 200,
plotfun= "stat", stat = "proporcao.chuva") +
xlab("Probabilidade de chover")
